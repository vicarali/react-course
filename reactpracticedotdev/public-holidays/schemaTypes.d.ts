/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/Countries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns a list of all supported countries */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ISO-639-1 code of a language or empty
                     * @example DE
                     */
                    languageIsoCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CountryResponse"][];
                        "text/json": components["schemas"]["CountryResponse"][];
                        "text/plain": components["schemas"]["CountryResponse"][];
                        "text/csv": components["schemas"]["CountryResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Languages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns a list of all used languages */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ISO-639-1 code of a language or empty
                     * @example DE
                     */
                    languageIsoCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LanguageResponse"][];
                        "text/json": components["schemas"]["LanguageResponse"][];
                        "text/plain": components["schemas"]["LanguageResponse"][];
                        "text/csv": components["schemas"]["LanguageResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/PublicHolidays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns list of public holidays for a given country */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 code of the country
                     * @example DE
                     */
                    countryIsoCode: string;
                    /**
                     * @description Start of the date range
                     * @example 2023-01-01
                     */
                    validFrom: string;
                    /**
                     * @description End of the date range
                     * @example 2023-12-31
                     */
                    validTo: string;
                    /**
                     * @description ISO-639-1 code of a language or empty
                     * @example DE
                     */
                    languageIsoCode?: string;
                    /**
                     * @description Code of the subdivision or empty
                     * @example DE-BE
                     */
                    subdivisionCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HolidayResponse"][];
                        "text/json": components["schemas"]["HolidayResponse"][];
                        "text/plain": components["schemas"]["HolidayResponse"][];
                        "text/calendar": components["schemas"]["HolidayResponse"][];
                        "text/csv": components["schemas"]["HolidayResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/PublicHolidaysByDate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns a list of public holidays from all countries for a given date. */
        get: {
            parameters: {
                query: {
                    /**
                     * @description Date of interest
                     * @example 2023-12-25
                     */
                    date: string;
                    /**
                     * @description ISO-639-1 code of a language or empty
                     * @example DE
                     */
                    languageIsoCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HolidayByDateResponse"][];
                        "text/json": components["schemas"]["HolidayByDateResponse"][];
                        "text/plain": components["schemas"]["HolidayByDateResponse"][];
                        "text/csv": components["schemas"]["HolidayByDateResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/SchoolHolidays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns list of official school holidays for a given country */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 code of the country
                     * @example DE
                     */
                    countryIsoCode: string;
                    /**
                     * @description Start of the date range
                     * @example 2023-01-01
                     */
                    validFrom: string;
                    /**
                     * @description End of the date range
                     * @example 2023-12-31
                     */
                    validTo: string;
                    /**
                     * @description ISO-639-1 code of a language or empty
                     * @example DE
                     */
                    languageIsoCode?: string;
                    /**
                     * @description Code of the subdivision or empty
                     * @example DE-MV
                     */
                    subdivisionCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HolidayResponse"][];
                        "text/json": components["schemas"]["HolidayResponse"][];
                        "text/plain": components["schemas"]["HolidayResponse"][];
                        "text/calendar": components["schemas"]["HolidayResponse"][];
                        "text/csv": components["schemas"]["HolidayResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/SchoolHolidaysByDate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns a list of school holidays from all countries for a given date. */
        get: {
            parameters: {
                query: {
                    /**
                     * @description Date of interest
                     * @example 2023-12-25
                     */
                    date: string;
                    /**
                     * @description ISO-639-1 code of a language or empty
                     * @example DE
                     */
                    languageIsoCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HolidayByDateResponse"][];
                        "text/json": components["schemas"]["HolidayByDateResponse"][];
                        "text/plain": components["schemas"]["HolidayByDateResponse"][];
                        "text/csv": components["schemas"]["HolidayByDateResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Statistics/PublicHolidays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns statistical data about public holidays for a given country. */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 code of the country
                     * @example DE
                     */
                    countryIsoCode: string;
                    /**
                     * @description Code of the subdivision or empty
                     * @example DE-BE
                     */
                    subdivisionCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StatisticsResponse"][];
                        "text/json": components["schemas"]["StatisticsResponse"][];
                        "text/plain": components["schemas"]["StatisticsResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Statistics/SchoolHolidays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns statistical data about school holidays for a given country */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 code of the country
                     * @example DE
                     */
                    countryIsoCode: string;
                    /**
                     * @description Code of the subdivision or empty
                     * @example DE-BE
                     */
                    subdivisionCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StatisticsResponse"][];
                        "text/json": components["schemas"]["StatisticsResponse"][];
                        "text/plain": components["schemas"]["StatisticsResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Subdivisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns a list of relevant subdivisions for a supported country (if any) */
        get: {
            parameters: {
                query: {
                    /**
                     * @description ISO 3166-1 code of the country
                     * @example DE
                     */
                    countryIsoCode: string;
                    /**
                     * @description ISO-639-1 code of a language or empty
                     * @example DE
                     */
                    languageIsoCode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SubdivisionResponse"][];
                        "text/json": components["schemas"]["SubdivisionResponse"][];
                        "text/plain": components["schemas"]["SubdivisionResponse"][];
                        "text/csv": components["schemas"]["SubdivisionResponse"][];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/problem+json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Representation of a country reference */
        CountryReference: {
            /**
             * @description Country ISO code
             * @example DE
             */
            isoCode: string;
        };
        /** @description Representation of a country as defined in ISO 3166-1 */
        CountryResponse: {
            /**
             * @description ISO 3166-1 country code
             * @example DE
             */
            isoCode: string;
            /**
             * @description Localized country names
             * @example [
             *       {
             *         "language": "EN",
             *         "text": "Germany"
             *       },
             *       {
             *         "language": "DE",
             *         "text": "Deutschland"
             *       }
             *     ]
             */
            name: components["schemas"]["LocalizedText"][];
            /**
             * @description Official ISO-639-1 language codes
             * @example [
             *       "DE"
             *     ]
             */
            officialLanguages: string[];
        };
        /** @description Representation of a holiday by date */
        HolidayByDateResponse: {
            /** @description Additional localized comments */
            comment?: components["schemas"]["LocalizedText"][] | null;
            country: components["schemas"]["CountryReference"];
            /**
             * Format: uuid
             * @description Unqiue holiday id
             * @example ff3b77a3-8c31-47af-b1c7-f26dd51f3c19
             */
            id: string;
            /** @description Localized names of the holiday */
            name: components["schemas"]["LocalizedText"][];
            /**
             * @description Is the holiday nationwide?
             * @example true
             */
            nationwide: boolean;
            regionalScope?: components["schemas"]["RegionalScope"];
            /** @description List of subdivision references */
            subdivisions: components["schemas"]["SubdivisionReference"][];
            temporalScope?: components["schemas"]["TemporalScope"];
            type: components["schemas"]["HolidayType"];
        };
        /** @description Representation of a holiday */
        HolidayResponse: {
            /** @description Additional localized comments */
            comment?: components["schemas"]["LocalizedText"][] | null;
            /**
             * Format: date
             * @description End date of the holiday
             * @example 2022-12-31
             */
            endDate: string;
            /**
             * Format: uuid
             * @description Unqiue holiday id
             * @example ff3b77a3-8c31-47af-b1c7-f26dd51f3c19
             */
            id: string;
            /** @description Localized names of the holiday */
            name: components["schemas"]["LocalizedText"][];
            /**
             * @description Is the holiday nationwide?
             * @example true
             */
            nationwide: boolean;
            regionalScope?: components["schemas"]["RegionalScope"];
            /**
             * Format: date
             * @description Start date of the holiday
             * @example 2022-01-01
             */
            startDate: string;
            /** @description List of subdivision references */
            subdivisions: components["schemas"]["SubdivisionReference"][];
            temporalScope?: components["schemas"]["TemporalScope"];
            type: components["schemas"]["HolidayType"];
        };
        /**
         * @description Type of holiday
         * @enum {string}
         */
        HolidayType: "Public" | "Bank" | "Optional" | "School" | "BackToSchool" | "EndOfLessons";
        /** @description Representation of a language as defined in ISO-639-1 */
        LanguageResponse: {
            /**
             * @description ISO-639-1 language code
             * @example DE
             */
            isoCode: string;
            /**
             * @description Localized language names
             * @example [
             *       {
             *         "language": "DE",
             *         "text": "Deutsch"
             *       },
             *       {
             *         "language": "EN",
             *         "text": "German"
             *       }
             *     ]
             */
            name: components["schemas"]["LocalizedText"][];
        };
        /** @description A localized text string */
        LocalizedText: {
            /** @description ISO-639-1 language code */
            language: string;
            /** @description The localized text */
            text: string;
        };
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
        } & {
            [key: string]: unknown;
        };
        /**
         * @description Regional scope of a holdiay
         * @enum {string}
         */
        RegionalScope: "National" | "Regional" | "Local";
        /** @description Statistical data of the holidays database */
        StatisticsResponse: {
            /**
             * Format: date
             * @description The youngest holiday start date in the database
             */
            youngestStartDate: string;
            /**
             * Format: date
             * @description The oldest holiday start date in the database
             */
            oldestStartDate: string;
        };
        /** @description Representation of a subdivision reference */
        SubdivisionReference: {
            /**
             * @description Subdivision code
             * @example DE-BE
             */
            code: string;
            /**
             * @description Short name for display
             * @example BE
             */
            shortName: string;
        };
        /** @description Representation of a subdivision */
        SubdivisionResponse: {
            /**
             * @description Localized categories of the subdivision
             * @example [
             *       {
             *         "language": "DE",
             *         "text": "Bundesland"
             *       },
             *       {
             *         "language": "EN",
             *         "text": "Federal state"
             *       }
             *     ]
             */
            category: components["schemas"]["LocalizedText"][];
            /** @description Child subdivisions */
            children?: components["schemas"]["SubdivisionResponse"][] | null;
            /**
             * @description Subdivision code
             * @example DE-BE
             */
            code: string;
            /**
             * @description Localized comments of the subdivision
             * @example null
             */
            comment: components["schemas"]["LocalizedText"][];
            /**
             * @description ISO 3166-2 subdivision code (if defined)
             * @example DE-BE
             */
            isoCode?: string | null;
            /**
             * @description Localized names of the subdivision
             * @example [
             *       {
             *         "language": "DE",
             *         "text": "Berlin"
             *       },
             *       {
             *         "language": "EN",
             *         "text": "Berlin"
             *       }
             *     ]
             */
            name: components["schemas"]["LocalizedText"][];
            /** @description Official languages as ISO-639-1 codes */
            officialLanguages: string[];
            /**
             * @description Short name for display
             * @example BE
             */
            shortName: string;
        };
        /**
         * @description Temporal scope of a holdiay
         * @enum {string}
         */
        TemporalScope: "FullDay" | "HalfDay";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
